experiment_name: "image-bubbles"
device: "cuda:0"

meshnca:
  channels: 16                   # Number of nca channels
  fc_dim: 128                    # Number of neurons in the hidden layer
  sh_order: 1                    # Degree of the spherical harmonics
  aggregation: "sum"             # Aggregation method for the perception stage. Options: sum, mean
  stochastic_update: True        # Whether to use stochastic update in the NCA update
  seed_mode: "zeros"             # Initial state of the NCA. Options: zeros, random
  condition: null                # Condition for the NCA. Options: null, "MPE", "CPE"
  target_channels: {
    "rgb": [ 0, 3 ],
  }
  graft_initialization: null     # Either null or a path to the pretrained model to use for graft initialization

mesh:
  train_icosphere:
    subdivision_freq: 2 ** 6                  # Frequency of the icosphere subdivision.


train:
  epochs: 4000                      # Number of epochs
  batch_size: 1                     # Batch size
  lr: 0.001                         # Learning rate
  lr_decay_steps: [ 1000, 2000 ]    # Learning rate decay steps
  lr_decay_gamma: 0.3               # Learning rate decay factor

  #### MeshNCA related configs ####
  pool_size: 256                    # Number of samples in the pool. Pool is used to improve long-term stability of MeshNCA
  inject_seed_interval: 16          # Number of steps after which a seed state is injected into the pool
  step_range: [ 15, 25 ]            # Number of update steps during training is sampled randomly from this range

  #### Rendering related configs ####
  camera:
    num_views: 3                    # Number of random views used fo training
    distance: 2.5                   # Distance of the camera from the origin
  icosphere:
    subdivision_freq: 64            # Frequency of the icosphere subdivision. 64 = 2 ** 6

  test_mesh:
    obj_path: "data/meshes/mug/mug.obj"       # Path to the test mesh
    subdivision_iter: 1                       # Number of subdivision iterations for the test mesh


  summary_interval: 100             # Interval for logging the training summary



renderer:
  height: 320                     # Height of the rendered image
  width: 320                      # Width of the rendered image
  ambient_light: 1.0              # Ambient light intensity
  directional_light: 0.0          # Directional light intensity
  background_color: 0.0           # Background color in gray scale. 1.0 = white, 0.0 = black

loss:
  overflow_loss_weight: 10000.0      # Weight of the overflow loss
  appearance_loss_weight: 2.0                    # Weight of the style loss

  #### Appearance loss used for image-guided training. Mostly based on VGG features ####
  appearance_loss_kwargs:
    image_size: [ 224, 224 ]                    # Image resolution used for loss calculation
    # The single channel images will be expanded to 3 channels for evaluating the VGG-based style loss
    target_images_path: {
      "rgb": "data/textures/bubbly_0101.jpg",
    }
    # Number of channels in the target images
    target_channels: {
      "rgb": 3,
    }
    vgg_layers: [ 1,3,6,8,11,13,15,22,29 ]    # VGG layers to be used for the style loss


  #### Loss weights ####






wandb:
  project: "MeshNCA"
  key: "529320c6abc9257a153c905f6e56d7b83c8d0dd0"
